/mm { 25.4 div 72 mul } def

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Start of grid parameters

/dot_pitch          5 mm                        def
/minor_grid_count   4                           def
/major_grid_count   3 minor_grid_count mul      def

/little_dot_size    0.1 mm                      def
/big_dot_size       0.175 mm                    def

% End of grid parameters
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Select a4
<</PageSize [595 842]>> setpagedevice


% Useful operators.
/dup2 {1 index 1 index} def
/rdef {exch def} def

% Useful maths.
/rsub {exch sub} def
/negate {0 rsub} def
/fraction {dup truncate sub} def
/remainder {exch 1 index div fraction mul} def
/half {2 div} def
/is_divisor? {mod 0 eq} def


% Determine if an x y dot index should be drawn heavily - [x y] : [isbig]
/is_big_dot? 
{
    dup2
    major_grid_count is_divisor? exch major_grid_count is_divisor? or
    3 1 roll
    minor_grid_count is_divisor? exch minor_grid_count is_divisor? and
    or
} def

% Determine dotsize - [x y] : [dotsize]
/dot_size {is_big_dot? {big_dot_size} {little_dot_size} ifelse} def

% Draw dot - [x y dotsize] : []
/dot {newpath 0 360 arc fill} def

% Query the page size
currentpagedevice /PageSize get dup
0 get /page_width rdef
1 get /page_height rdef

/major_grid_size major_grid_count dot_pitch mul def
/width_count page_width dot_pitch div truncate def
/height_count page_height dot_pitch div truncate def

% Draw the grid - [] : []
/draw_page 
{
    % Translate origin to centre the heavy grid.
    page_width major_grid_size remainder half
    page_height major_grid_size remainder half
    translate

    % Scale to grid size.
    dot_pitch dot_pitch scale

    major_grid_count negate 1 width_count
    {
        major_grid_count negate 1 height_count
        {
            % Duplicate the x under y.
            % [x y] : [x x y]
            1 index exch

            % Determine the dot size here.
            % Need to scale down by dot pitch to correct for the transform's scaling.
            % [x y] : [x y dotsize]
            dup2 dot_size dot_pitch div

            % Render the dot.
            % [x y dotsize] : []
            dot
        } 
        for

        % Drop the x loop variable.
        pop     
    } 
    for
}
def

% Draw in black.
0 setgray

% Generate two pages.
draw_page showpage
draw_page showpage
